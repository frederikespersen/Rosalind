def nucleic_complimentary(sequence: str):
    complimentary = ''
    if 'U' in sequence:
        nucleic = 'rna'
    else:
        nucleic = 'dna'
    for p in range(len(sequence)):
        b = sequence[p]
        if b == 'A':
            if nucleic == 'dna':
                complimentary += 'T'
            elif nucleic == 'rna':
                complimentary += 'U'
        elif b == 'T' or b == 'U':
            complimentary += 'A'
        elif b == 'G':
            complimentary += 'C'
        elif b == 'C':
            complimentary += 'G'
        else:
            raise ValueError("Non A(T/U)CG nucleotide specified!")
    complimentary = complimentary[::-1]
    assert len(sequence) == len(complimentary)
    return complimentary


sample_dna = 'CTCTTTCCGTCAGCCGCAGAGGGTTTAGTGCCCGACGGATCGGCGAAAGAATGACGGATCGATCTACTTCGCGTGAGCACTCTCGTTGTCCTGCTTTCATATTCCGAGTACTCATAATTCCATAGGTCTGAGATTATGGTAGCGTAGACGGTGCATAGTGGGATGACAGCTATTAATAGGCCCTTCAGGATGACGGTGGTAGTAGCCAGCGTACCGACGTACCGGCTTTCGCGGGGCAAGGGTCCATGAAAACGGCAAGGAAGACGTGGCTCTTAGTAGATATGGGAAGGCATTCTTTCAGACTCTCAACATAACCGTGGTTGCCATTTCGTCAGACATTCTGCAGCGGTATCTTCAGATCGGTTGAGAAATAGGACCATGAGCTTAGAAAGTGAAGCAAAGACTTGGCGATTAGCATGCCGGGTATCATAGATGACTGTCTGCACTTAACGCTTCCGATACCCATACGTTACGAAAACTATTGGGCTGCAAGCTAGCACACAATATTTCATACTGGAGTGCTGCGGCTCATGCGAGACCGTTTAACCGCATAATCACTGTTGGCCGTACTGGCTGCTTTCCACTGTACCTTTGATCTATTTTAGCAAAAAGCGGATACAGAAGCTATGAAGTCCTGGAAAGACGGGTTGGGGAGGTGTAAAAATGAGCTTGGGTCCGCGATAAAAGACCAAAATCGCCCCATCCTATCGGTCAATTTCACCCGAAAGTCTGACTCTCTACCGCCATAACTTCCAGTAGAAAACTAGAGCTTAATGCTGGGGAATATCGTCGCATCCAATCAAGGTATACAGTCGGGATAAACCTAGGGAACACCGTTAATCGCTCGTTCACCTGTTACTGACATAAGTACTGTAGAAGGATTAGGTCTAGATTAGAATTGGCAAATTCTGTTTGTGCCACTACAGGAGCAGAGGGAGCATGAC'

if __name__=='__main__':
    print(nucleic_complimentary(sample_dna))